{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyPGE7gSqh2lvUy3NUswgSd+",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/C9341-tugba/phyton_project1/blob/main/colab\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ylEZYKj-Hbt-",
        "outputId": "84c89efb-921c-4b3d-81ab-49a395c548d6"
      },
      "source": [
        "fruits = ['Apples', 'Oranges', 'Bananas']\n",
        "quantities = [5, 3, 4]\n",
        "prices = [1.50, 2.25, 0.89]\n",
        "output = []\n",
        "fruit_tuple_0 = (fruits[0], quantities[0], prices[0])\n",
        "output.append(output)\n",
        "fruit_tuple_1 = (fruits[1], quantities[1], prices[1]) \n",
        "output.append(output)\n",
        "fruit_tuple_2 = (fruits[2], quantities[2], prices[2]) \n",
        "output.append(output)\n",
        "print(fruit_tuple_0, fruit_tuple_1, fruit_tuple_2)\n"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "('Apples', 5, 1.5) ('Oranges', 3, 2.25) ('Bananas', 4, 0.89)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "6-tjzF7THbq_",
        "outputId": "d35b404b-2439-4a84-b79b-6d527ed7d956"
      },
      "source": [
        "-fruits = ['Apples', 'Oranges', 'Bananas'] quantities = [5, 3, 4]\n",
        "prices = [1.50, 2.25, 0.89]\n",
        "output=[]\n",
        "fruit_tuple_0 = (fruits[0], quantities[0], prices[0]) output.append(output)\n",
        "fruit_tuple_1 = (fruits[1], quantities[1], prices[1]) output.append(output)\n",
        "fruit_tuple_2 = (fruits[2], quantities[2], prices[2]) output.append(output)\n",
        "print(fruit_tuple_0, fruit_tuple_1, fruit_tuple_2)\n"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-c525523886dc>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    fruits = ['Apples', 'Oranges', 'Bananas'] quantities = [5, 3, 4]\u001b[0m\n\u001b[0m                                                       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "JTtRvB6jHboU",
        "outputId": "f428660d-fe42-4ea8-c914-32fd8e1c06f7"
      },
      "source": [
        "fruits = ['Apples', 'Oranges', 'Bananas'] \n",
        "quantities = [5, 3, 4]\n",
        "prices = [1.50, 2.25, 0.89]\n",
        "i= 0\n",
        "output = []\n",
        "for fruit in fruits:\n",
        " temp_qty = quantities[i]\n",
        "temp_price = prices[i]\n",
        "output.append((fruit, temp_qty, temp_price))\n",
        "i += 1 \n",
        "  print(output)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-14-2e41187a00ae>\"\u001b[0;36m, line \u001b[0;32m11\u001b[0m\n\u001b[0;31m    print(output)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zJ8z5lqDHbmC"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XKkGnsSeHbjZ",
        "outputId": "8e8492f2-5255-4f1c-87a4-a9c8d75c37d9"
      },
      "source": [
        "fruits = ['Apples', 'Oranges', 'Bananas'] \n",
        "quantities = [5, 3, 4]\n",
        "prices = [1.50, 2.25, 0.89]\n",
        "groceries = zip(fruits, quantities, prices) \n",
        "print(list(groceries))"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[('Apples', 5, 1.5), ('Oranges', 3, 2.25), ('Bananas', 4, 0.89)]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6U5QhJ3cHbg9",
        "outputId": "abf00c0b-9eaf-4b93-8c25-681b1b73218b"
      },
      "source": [
        "fruits = ['Apples', 'Oranges', 'Bananas'] \n",
        "quantities = [5, 3, 4]\n",
        "prices = [1.50, 2.25, 0.89]\n",
        "i= 0\n",
        "output = []\n",
        "for fruit in fruits:\n",
        "  for qty in quantities:\n",
        "    for price in prices:\n",
        "      output.append((fruit, qty, price)) \n",
        "i += 1\n",
        "print(output)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[('Apples', 5, 1.5), ('Apples', 5, 2.25), ('Apples', 5, 0.89), ('Apples', 3, 1.5), ('Apples', 3, 2.25), ('Apples', 3, 0.89), ('Apples', 4, 1.5), ('Apples', 4, 2.25), ('Apples', 4, 0.89), ('Oranges', 5, 1.5), ('Oranges', 5, 2.25), ('Oranges', 5, 0.89), ('Oranges', 3, 1.5), ('Oranges', 3, 2.25), ('Oranges', 3, 0.89), ('Oranges', 4, 1.5), ('Oranges', 4, 2.25), ('Oranges', 4, 0.89), ('Bananas', 5, 1.5), ('Bananas', 5, 2.25), ('Bananas', 5, 0.89), ('Bananas', 3, 1.5), ('Bananas', 3, 2.25), ('Bananas', 3, 0.89), ('Bananas', 4, 1.5), ('Bananas', 4, 2.25), ('Bananas', 4, 0.89)]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2LIeTyW-Hbd9"
      },
      "source": [
        "import math\n",
        "total = int(input('Enter seconds here > '))\n",
        "hours = total / 3600\n",
        "minutes = (hours - math.trunc(hours)) * 60\n",
        "seconds = (minutes - math.trunc(minutes)) * 60\n",
        "print(f'{total} seconds is {math.trunc(hours)} hours, {math.trunc(minutes)} minutes and {math.trunc(seconds)} seconds.')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HPzUNkZ8Hbae"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lKZqn5BgKcOm"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ujf9Kf74KcKg"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jK0uv_GCKcHj"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h7ty5MByKcCa"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwJRRGHHKb_c"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1WASwe-iKb8S"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}